version: "3.9"

networks:
  observability:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:

services:
  opentelemetryotlpexporter:
    image: ${DOCKER_REGISTRY-}opentelemetryotlpexporter
    build:
      context: OpenTelemetryOtlpExporter
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=sample-api
      - OTEL_RESOURCE_ATTRIBUTES=deployment.environment=dev
      - ENABLE_SWAGGER=true
    depends_on:
      - otel-collector
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - observability

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.114.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8889:8889"
      - "13133:13133"
    restart: unless-stopped
    networks:
      - observability

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    depends_on:
      - otel-collector
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - observability
